# Definition of upstream socket
#
# documentation http://nginx.org/en/docs/http/ngx_http_upstream_module.html
#
upstream rails {
  server                        unix:///home/easy/application.sock;
}



# uncomment if need permanent redirect from http to https
#server {
#  listen                        80;
#  listen                        [::]:80;
#  server_name                   _;
#  location / {
#    rewrite                     ^(.*) https://$http_host$1 permanent;
#  }
#}


server {
  listen                        443 default ssl http2;
  listen                        [::]:443 ssl http2;
# listen                        80;
# listen                        [::]:80;

  client_max_body_size          100M;


# the aplication will listen on all server names
  server_name                   _;

# In this case the root of our application is /home/easy/current
  root                          /home/easy/current/public;

  try_files                     $uri @app;
  error_page                    500 502 503 504 /500.html;

# Uncoment if you would like to compress defined types in gzip_types option
#  gzip                          on;
#  gzip_http_version             1.0;
#  gzip_disable                  "MSIE [1-6]\.(?!.*SV1)";
#  gzip_buffers                  4 16k;
#  gzip_comp_level               4;
#  gzip_min_length               0;
#  gzip_types                    text/plain
#                                text/css
#                                application/x-javascript
#                                text/xml
#                                application/xml
#                                application/xml+rss
#                                text/javascript
#                                application/json;


# Uncoment in case you want to cache static content
#  location ~ ^/(images|system|assets)/ {
#    gzip_static                 on;
#    expires                     1y;
#    add_header                  Cache-Control public;
#    add_header                  ETag '';
#    break;
#  }


  location @app {
    proxy_pass                  http://rails;
    proxy_set_header            Host $http_host;
    proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header            X-Forwarded-Proto $scheme;
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
  }


# Uncoment only if use redirect from http to https
#  ssl                          on;

  ssl_certificate              /etc/nginx/self_signed.crt;
  ssl_certificate_key          /etc/nginx/self_signed.key;
  ssl_session_cache            shared:SSL:10m;
  ssl_session_timeout 5m;
  ssl_protocols                TLSv1.2;
  ssl_ciphers                  'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers    on;

}
